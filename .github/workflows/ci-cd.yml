name: CI/CD Pipeline

on:
  push:
    branches:
      - 'master'
      - '*'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: target/server-1.0-SNAPSHOT.jar

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: package

      - name: Deploy to VPS
        env:
          YC_SA_JSON_CREDENTIALS: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

        run: |
          # Установка Yandex Cloud CLI
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          export PATH=$PATH:$HOME/yandex-cloud/bin
          
          echo "$YC_SA_JSON_CREDENTIALS" > yc-sa-key.json
          yc config set service-account-key yc-sa-key.json
          
          echo "$SSH_PRIVATE_KEY" > ssh_key
          chmod 600 ssh_key
          
          # Добавление известного хоста
          mkdir -p ~/.ssh
          ssh-keyscan -H 51.250.45.140 >> ~/.ssh/known_hosts

          # Копирование нового приложения и запуск его в фоновом режиме
          scp -i ssh_key ./server-1.0-SNAPSHOT.jar paw@51.250.45.140:/home/paw/
          ssh -i ssh_key paw@51.250.45.140 'sudo nohup java -jar /home/paw/server-1.0-SNAPSHOT.jar > /dev/null 2>&1 &'

          sleep 10  # Ждем некоторое время, чтобы приложение успело запуститься

          echo "Application did not start successfully." 
          exit 1  # Если приложение не запустилось, завершаем с ошибкой
